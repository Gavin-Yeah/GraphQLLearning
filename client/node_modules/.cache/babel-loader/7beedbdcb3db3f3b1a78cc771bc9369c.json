{"ast":null,"code":"var _jsxFileName = \"/Users/jiadaye/workspace/graphql/client/src/components/AddBook.js\";\nimport React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\nimport { getAuthorsQuery, addBookMutation } from '../queries/queries';\nimport { compose } from 'lodash';\n\nclass AddBook extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      genre: \"\",\n      authorId: \"\"\n    };\n  }\n\n  displayAuthors() {\n    const data = this.props.getAuthorsQuery;\n\n    if (data.loading) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 16\n        }\n      }, \"Loading Authors\");\n    } else {\n      return data.authors.map(author => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: author.id,\n          value: author.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }\n        }, author.name);\n      });\n    }\n  }\n\n  submitForm(e) {\n    e.preventDefault();\n    console.log(this.state);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      id: \"add-book\",\n      onSubmit: this.submitForm.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, \"Book name:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.setState({\n        name: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, \"Genre:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.setState({\n        genre: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, \"Author:\"), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: e => this.setState({\n        authorId: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, \"select an author\"), this.displayAuthors())), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, \"+\"));\n  }\n\n}\n\nexport default compose(graphql(getAuthorsQuery, {\n  name: \"getAuthorsQuery\"\n}), graphql(addBookMutation, {\n  name: \"addBookMutation\"\n}))(AddBook);","map":{"version":3,"sources":["/Users/jiadaye/workspace/graphql/client/src/components/AddBook.js"],"names":["React","Component","graphql","getAuthorsQuery","addBookMutation","compose","AddBook","constructor","props","state","name","genre","authorId","displayAuthors","data","loading","authors","map","author","id","submitForm","e","preventDefault","console","log","render","bind","setState","target","value"],"mappings":"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","sourcesContent":["import React, { Component} from 'react';\n\nimport { graphql } from 'react-apollo';\nimport {getAuthorsQuery, addBookMutation} from '../queries/queries'\nimport {compose} from 'lodash'\n\n\n\n\nclass AddBook extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            name: \"\",\n            genre: \"\",\n            authorId: \"\"\n        }\n    }\n    displayAuthors(){\n        const data = this.props.getAuthorsQuery;\n        if(data.loading){\n            return (\n               <option>Loading Authors</option>\n            )\n        }else{\n            return data.authors.map(author=>{\n                return (\n                    <option key={author.id} value={author.id}>{author.name}</option>\n                )\n            })\n        }\n    }\n    submitForm(e){\n        e.preventDefault();\n        console.log(this.state);\n    }\n\n    render() {\n\n        return (\n            <form id=\"add-book\" onSubmit={this.submitForm.bind(this)}>\n                <div className=\"field\">\n                    <label>Book name:</label>\n                    <input type=\"text\" onChange={e=>this.setState({\n                        name:e.target.value\n                    })}/>\n                </div>\n                <div className=\"field\">\n                    <label>Genre:</label>\n                    <input type=\"text\" onChange={e=>this.setState({\n                        genre:e.target.value\n                    })} />\n                </div>\n            \n                <div className=\"field\">\n                    <label>Author:</label>\n                    <select onChange={e=>this.setState({\n                        authorId:e.target.value\n                    })}>\n                    <option>select an author</option>\n                        {this.displayAuthors()}\n                    </select>\n                </div>\n                <button>+</button>\n            </form>\n        )\n    }\n}\n\nexport default compose(\n    graphql(getAuthorsQuery,{name: \"getAuthorsQuery\"}),\n    graphql(addBookMutation,{name: \"addBookMutation\"})\n)(AddBook);\n"]},"metadata":{},"sourceType":"module"}