{"ast":null,"code":"var _jsxFileName = \"/Users/jiadaye/workspace/graphql/client/src/components/BookList.js\";\nimport React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\nimport { getBooksQuery } from '../queries/queries';\nimport BookDetails from './BookDetails';\n\nclass BookList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: null\n    };\n  }\n\n  displayBooks() {\n    var data = this.props.data;\n\n    if (data.loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 20\n        }\n      }, \"Loading books\");\n    } else {\n      console.log('ds');\n      return data.books.map(book => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: book.id,\n          onClick: e => this.setState({\n            selected: book.id\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }\n        }, book.name);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"book-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, this.displayBooks()), /*#__PURE__*/React.createElement(BookDetails, {\n      bookId: this.state.selected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default graphql(getBooksQuery)(BookList);","map":{"version":3,"sources":["/Users/jiadaye/workspace/graphql/client/src/components/BookList.js"],"names":["React","Component","graphql","getBooksQuery","BookDetails","BookList","constructor","props","state","selected","displayBooks","data","loading","console","log","books","map","book","id","e","setState","name","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAAQC,OAAR,QAAsB,cAAtB;AACA,SAAQC,aAAR,QAA4B,oBAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAGA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC7BK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AACDC,EAAAA,YAAY,GAAE;AAEV,QAAIC,IAAI,GAAG,KAAKJ,KAAL,CAAWI,IAAtB;;AACA,QAAGA,IAAI,CAACC,OAAR,EAAgB;AACZ,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACH,KAFD,MAEK;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,aAAOH,IAAI,CAACI,KAAL,CAAWC,GAAX,CAAgBC,IAAD,IAAQ;AAC1B,4BAAQ;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAkB,UAAA,OAAO,EAAEC,CAAC,IAAE,KAAKC,QAAL,CAAc;AAACX,YAAAA,QAAQ,EAACQ,IAAI,CAACC;AAAf,WAAd,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkED,IAAI,CAACI,IAAvE,CAAR;AACH,OAFM,CAAP;AAGH;AAEJ;;AAEDC,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,EAAE,EAAC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKZ,YAAL,EADL,CADJ,eAII,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,KAAKF,KAAL,CAAWC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAQH;;AA/B4B;;AAkCjC,eAAeP,OAAO,CAACC,aAAD,CAAP,CAAuBE,QAAvB,CAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport {graphql} from 'react-apollo';\nimport {getBooksQuery} from '../queries/queries';\nimport BookDetails from './BookDetails';\n\n\nclass BookList extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            selected: null\n        }\n    }\n    displayBooks(){\n        \n        var data = this.props.data;\n        if(data.loading){\n            return(<div>Loading books</div>);\n        }else{\n            console.log('ds')\n            return data.books.map((book)=>{\n                return (<li key={book.id} onClick={e=>this.setState({selected:book.id})}>{book.name}</li>)\n            });\n        }\n\n    }\n\n    render() {\n   \n        return (\n            <div>\n                <ul id=\"book-list\">\n                    {this.displayBooks()}\n                </ul>\n                <BookDetails bookId={this.state.selected}/>\n            </div>\n        )\n    }\n}\n\nexport default graphql(getBooksQuery)(BookList);\n"]},"metadata":{},"sourceType":"module"}